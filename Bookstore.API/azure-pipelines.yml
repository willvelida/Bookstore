trigger:
  - main

variables:
  buildConfiguration: 'Release'
  vmImageName: 'vs2017-win2016'
  workingDirectory: '$(System.DefaultWorkingDirectory)/Bookstore.API'
  functionAppName: 'favelidabookstoreapi'
  azureSubscription: 'e86d34ea-25ef-4288-8ffb-5baaea87a61b'

stages:
  - stage: Build
    displayName: Build Stage
    

    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: --configuration $(buildConfiguration)

        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: 'test'
            projects: '**/*Tests/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
            zipAfterPublish: True
        
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'
  
  - stage: Deploy
    displayName: 'Deploy Bookstore.API'
    dependsOn: Build
    condition: succeeded()

    jobs:
      - deployment: Deploy
        displayName: Deploy Bookstore.API
        environment: Production
        pool:
          vmImage: $(vmImageName)

        strategy:
          runOnce:
            deploy:
              
              steps:
                - task: AzureFunctionApp@1
                  displayName: 'Deploy Azure Function'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    appType: functionApp
                    appName: $(functionAppName)
                    package: $(build.artifactstagingdirectory)/**/*.zip


        